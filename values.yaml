controller:
  image:
    registry: registry.k8s.io
    image: ingress-nginx/controller
    tag: "v1.9.5"
    digest: sha256:b3aba22b1da80e7acfc52b115cae1d4c687172cbf2b742d5b502419c25ff340e
    pullPolicy: IfNotPresent
    runAsNonRoot: true
    runAsUser: 101
    allowPrivilegeEscalation: false
    seccompProfile:
      type: RuntimeDefault

  config:
    server-tokens: "false"
    ssl-protocols: "TLSv1.2 TLSv1.3"
    ssl-ciphers: "ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384"
    ssl-session-tickets: "false"
    use-forwarded-headers: "true"
    enable-ocsp: "true"
    hsts: "true"
    hsts-include-subdomains: "true"
    hsts-max-age: "31536000"
    hsts-preload: "true"

  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 100m
      memory: 128Mi

  service:
    enabled: true
    type: LoadBalancer
    ports:
      http: 80
      https: 443

  ingressClassResource:
    name: nginx
    enabled: true
    default: false
    controllerValue: "k8s.io/ingress-nginx"

  metrics:
    port: 10254
    portName: metrics
    enabled: true
    service:
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "10254"
        prometheus.io/path: "/metrics"
    serviceMonitor:
      enabled: true
      additionalLabels:
        release: prometheus
      namespace: "monitoring"
      namespaceSelector:
        any: true
      scrapeInterval: 15s
      honorLabels: true

  podAnnotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "10254"
    prometheus.io/path: "/metrics"

rbac:
  create: true

serviceAccount:
  create: true

defaultBackend:
  enabled: true
  image:
    runAsNonRoot: true
    runAsUser: 65534
    allowPrivilegeEscalation: false
    seccompProfile:
      type: RuntimeDefault
