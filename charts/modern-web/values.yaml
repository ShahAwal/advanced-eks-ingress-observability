# Default values for modern-web chart
# This is a YAML-formatted file.

# -- Number of replicas for the deployment
replicaCount: 3

# -- Override the name of the chart
nameOverride: ""
# -- Override the full name of the chart
fullnameOverride: ""

# -- Common labels to add to all resources
commonLabels: {}

# -- Deployment strategy configuration
deploymentStrategy:
  type: RollingUpdate
  rollingUpdate:
    maxSurge: 1
    maxUnavailable: 0

image:
  # -- Repository for container image
  repository: nginx
  # -- Image tag
  tag: alpine
  # -- Image pull policy
  pullPolicy: IfNotPresent
  # -- Image pull secrets
  pullSecrets: []

# -- Service account configuration
serviceAccount:
  # -- Create a service account
  create: false
  # -- Annotations for the service account
  annotations: {}
  # -- Name of the service account
  name: ""

# -- Pod annotations
podAnnotations:
  prometheus.io/scrape: "true"
  prometheus.io/port: "80"
  prometheus.io/path: "/metrics"

# -- Pod security context
podSecurityContext:
  fsGroup: 101
  runAsNonRoot: true
  runAsUser: 101

# -- Container security context
securityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
      - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 101
  seccompProfile:
    type: RuntimeDefault

# -- Service configuration
service:
  # -- Service type
  type: ClusterIP
  # -- Service port
  port: 80
  # -- Service annotations
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "80"
    prometheus.io/path: "/metrics"

# -- Ingress configuration
ingress:
  # -- Enable ingress
  enabled: true
  # -- Ingress class name
  className: nginx
  # -- Ingress annotations
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/rewrite-target: /$1
    nginx.ingress.kubernetes.io/configuration-snippet: |
      more_set_headers "X-Frame-Options: DENY";
      more_set_headers "X-Content-Type-Options: nosniff";
      more_set_headers "X-XSS-Protection: 1; mode=block";
      more_set_headers "Referrer-Policy: strict-origin-when-cross-origin";
      more_set_headers "Content-Security-Policy: default-src 'self'; script-src 'self'; img-src 'self'; style-src 'self'; font-src 'self'; connect-src 'self';";
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
  # -- Ingress hosts configuration
  hosts:
    - host: app.moderncloud.example.com
      paths:
        - path: /(.*)
          pathType: Prefix
    - host: api.moderncloud.example.com
      paths:
        - path: /(.*)
          pathType: Prefix
  # -- Ingress TLS configuration
  tls:
    - secretName: modern-web-tls
      hosts:
        - app.moderncloud.example.com
        - api.moderncloud.example.com

# -- Resource limits and requests
resources:
  limits:
    cpu: 200m
    memory: 256Mi
  requests:
    cpu: 100m
    memory: 128Mi

# -- Autoscaling configuration
autoscaling:
  # -- Enable autoscaling
  enabled: true
  # -- Minimum replicas
  minReplicas: 2
  # -- Maximum replicas
  maxReplicas: 10
  # -- Target CPU utilization percentage
  targetCPUUtilizationPercentage: 70
  # -- Target memory utilization percentage
  targetMemoryUtilizationPercentage: 80
  # -- Behavior configuration for scaling
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
        - type: Percent
          value: 25
          periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
        - type: Percent
          value: 100
          periodSeconds: 30

# -- Node selector
nodeSelector: {}

# -- Tolerations
tolerations: []

# -- Affinity settings
affinity: {}

# -- ConfigMap configuration
configMap:
  # -- Enable ConfigMap
  enabled: true
  # -- ConfigMap data
  data:
    default.conf: |
      server {
          listen 80;
          server_name _;
          
          # Security headers
          add_header X-Frame-Options "DENY" always;
          add_header X-Content-Type-Options "nosniff" always;
          add_header X-XSS-Protection "1; mode=block" always;
          add_header Referrer-Policy "strict-origin-when-cross-origin" always;
          add_header Content-Security-Policy "default-src 'self'; script-src 'self'; img-src 'self'; style-src 'self'; font-src 'self'; connect-src 'self';" always;
          
          location / {
              root /usr/share/nginx/html;
              index index.html;
              add_header Content-Type text/html;
              return 200 '<html><body style="background-color:#2d2d2d; color:#ffffff; font-family: Arial, sans-serif; text-align:center; padding-top:100px;"><h1>Modern Cloud Native Application</h1><h2>Running on Kubernetes with Nginx Ingress</h2><p>Deployment Version: {{ .Chart.AppVersion }}</p><p>Pod: $hostname</p><p>Namespace: {{ .Release.Namespace }}</p><p>Environment: {{ .Values.environment | default "production" }}</p></body></html>';
          }
          
          location /health {
              access_log off;
              return 200 "healthy\n";
          }
          
          location /metrics {
              access_log off;
              return 200 "# HELP http_requests_total The total number of HTTP requests.\n# TYPE http_requests_total counter\nhttp_requests_total{method=\"get\",code=\"200\"} 1\n";
          }
      }

# -- Environment-specific configuration
environment: production

# -- Network policy configuration
networkPolicy:
  # -- Enable network policy
  enabled: true
  # -- Ingress rules
  ingress:
    - from:
        - podSelector:
            matchLabels:
              app.kubernetes.io/name: prometheus
      ports:
        - port: 80
          protocol: TCP
            
            
prometheus:
  enabled: true
  ampEndpoint: ""
  ampIngestRoleArn: ""
  awsRegion: "us-east-1"
  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 200m
      memory: 256Mi

grafana:
  enabled: true
  dashboards:
    enabled: true
# Updated values file
